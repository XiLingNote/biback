/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.37
 * Generated at: 2017-06-20 12:07:18 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;

public final class inputExcel_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
  
String path = request.getContextPath();  
String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";  

      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<base href=\"");
      out.print(basePath);
      out.write("\">\r\n");
      out.write("<!-- bootstrap -->\r\n");
      out.write("<link href=\"/css/bootstrap/bootstrap-back.css\" rel=\"stylesheet\" />\r\n");
      out.write("<link href=\"/css/bootstrap/bootstrap-editable.css\" rel=\"stylesheet\" />\r\n");
      out.write("<link href=\"/css/bootstrap/bootstrap-overrides.css\" type=\"text/css\"\r\n");
      out.write("\trel=\"stylesheet\" />\r\n");
      out.write("<!-- this page specific styles -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/css/tables.css\" type=\"text/css\"\r\n");
      out.write("\tmedia=\"screen\" />\r\n");
      out.write("<title>My JSP 'index.jsp' starting page</title>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\t<div>\r\n");
      out.write("\t\t1.通过简单的form表单提交方式，进行文件的上</br> 2.通过jquery.form.js插件提供的form表单一步提交功能\r\n");
      out.write("\t</div>\r\n");
      out.write("\t</br>\r\n");
      out.write("\t<form method=\"POST\" enctype=\"multipart/form-data\" id=\"form1\"\r\n");
      out.write("\t\taction=\"uploadExcel/upload.do\">\r\n");
      out.write("\t\t<table style=\"margin-left: 10%\">\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>上传文件:</td>\r\n");
      out.write("\t\t\t\t<td><input id=\"upfile\" type=\"file\" name=\"upfile\"></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><input type=\"submit\" value=\"提交\"\r\n");
      out.write("\t\t\t\t\tonclick=\"return checkData()\"></td>\r\n");
      out.write("\t\t\t\t<td><input type=\"button\" value=\"ajax方式提交\" id=\"btn\" name=\"btn\"></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</form>\r\n");
      out.write("<link href=\"/css/bootstrap/bootstrap.min.css\" rel=\"stylesheet\" type=\"text/css\">  \r\n");
      out.write("<link href=\"/css/bootstrap/bootstrap-table.css\" rel=\"stylesheet\" type=\"text/css\">  \r\n");
      out.write("<!-- <script src=\"/js/bootstrap/bootstrap-table-zh-CN.js\"></script>   \r\n");
      out.write(" -->  \r\n");
      out.write("<table class=\"table table-hover\" id=\"cusTable\"  \r\n");
      out.write("       data-pagination=\"true\"  \r\n");
      out.write("       data-show-refresh=\"true\"  \r\n");
      out.write("       data-show-toggle=\"true\"  \r\n");
      out.write("       data-showColumns=\"true\">  \r\n");
      out.write("  \r\n");
      out.write("       </thead>  \r\n");
      out.write("       <tbody>  \r\n");
      out.write("       </tbody>  \r\n");
      out.write("</table>  \r\n");
      out.write("</body>\r\n");
      out.write("<script src=\"/js/jquery-1.12.3.js\"></script>\r\n");
      out.write("<script src=\"/js/jquery.form-3.51.0.js\"></script>\r\n");
      out.write("<script src=\"/js/jquery-1.8.3.min.js\"></script>  \r\n");
      out.write("<script src=\"/js/bootstrap/bootstrap.min.js\"></script>  \r\n");
      out.write("<script src=\"/js/bootstrap/bootstrap-table.js\"></script>  \r\n");
      out.write("<script  src=\"/js/bootstrap/bootstrap-table-zh-CN.js\"></script>\r\n");
      out.write("<script src=\"/js/bootstrap/bootstrap-editable.js\"></script>\r\n");
      out.write("<script src=\"/js/bootstrap/bootstrap-table-editable.js\"></script>\r\n");
      out.write("<script src=\"/js/bootstrap/bootstrap-table-export.js\"></script>\r\n");
      out.write("<script src=\"//rawgit.com/hhurz/tableExport.jquery.plugin/master/tableExport.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">  \r\n");
      out.write("            //ajax 方式上传文件操作  \r\n");
      out.write("             $(document).ready(function(){  \r\n");
      out.write("            \t//调用函数，初始化表格  \r\n");
      out.write("            \t initTable();  \r\n");
      out.write("                 $(\"#search\").bind(\"click\", initTable);  \r\n");
      out.write("\r\n");
      out.write("                $('#btn').click(function(){  \r\n");
      out.write("                    if(checkData()){ \r\n");
      out.write("                        $('#form1').ajaxSubmit({   \r\n");
      out.write("                        \ttype:'post',\r\n");
      out.write("                            url:'target/uploadDailyTarget.do',  \r\n");
      out.write("                            success: resutlMsg,  \r\n");
      out.write("                            error: errorMsg  \r\n");
      out.write("                        });   \r\n");
      out.write("                        function resutlMsg(msg){  \r\n");
      out.write("                            alert(msg);     \r\n");
      out.write("                            $(\"#upfile\").val(\"\");  \r\n");
      out.write("                        }  \r\n");
      out.write("                        function errorMsg(){   \r\n");
      out.write("                            alert(\"导入excel出错！\");      \r\n");
      out.write("                        }  \r\n");
      out.write("                    }  \r\n");
      out.write("                });  \r\n");
      out.write("             });  \r\n");
      out.write("               \r\n");
      out.write("             //JS校验form表单信息  \r\n");
      out.write("             function checkData(){  \r\n");
      out.write("                var fileDir = $(\"#upfile\").val();  \r\n");
      out.write("                var suffix = fileDir.substr(fileDir.lastIndexOf(\".\"));  \r\n");
      out.write("                if(\"\" == fileDir){  \r\n");
      out.write("                    alert(\"选择需要导入的Excel文件！\");  \r\n");
      out.write("                    return false;  \r\n");
      out.write("                }  \r\n");
      out.write("                if(\".xls\" != suffix && \".xlsx\" != suffix ){  \r\n");
      out.write("                    alert(\"选择Excel格式的文件导入！\");  \r\n");
      out.write("                    return false;  \r\n");
      out.write("                }  \r\n");
      out.write("                return true;  \r\n");
      out.write("             }  \r\n");
      out.write("             function initTable() {  \r\n");
      out.write("                 //先销毁表格  \r\n");
      out.write("                 $('#cusTable').bootstrapTable('destroy');  \r\n");
      out.write("                 //初始化表格,动态从服务器加载数据  \r\n");
      out.write("                 $(\"#cusTable\").bootstrapTable({  \r\n");
      out.write("                    // method: \"POST\",  //使用get请求到服务器获取数据  \r\n");
      out.write("                     url: \"target/queryDailyTarget.do\", //获取数据的Servlet地址  \r\n");
      out.write("                     striped: true,  //表格显示条纹  \r\n");
      out.write("                     pagination: true, //启动分页  \r\n");
      out.write("                     pageSize: 10,  //每页显示的记录数  \r\n");
      out.write("                     pageNumber:1, //当前第几页  \r\n");
      out.write("                     pageList: [10, 25, 50, 100],  //记录数可选列表  \r\n");
      out.write("                     search: false,  //是否启用查询  \r\n");
      out.write("                     showColumns: true,  //显示下拉框勾选要显示的列  \r\n");
      out.write("                     showRefresh: true,  //显示刷新按钮  \r\n");
      out.write("                     showExport: true,\r\n");
      out.write("                     sidePagination: \"server\", //表示服务端请求  \r\n");
      out.write("                     toolbar: '#toolbar',\r\n");
      out.write("                     exportDataType: \"all\", \r\n");
      out.write("         \t\t\t height : 550, // 行高，如果没有设置height属性，表格自动根据记录条数觉得表格高度\r\n");
      out.write("                     //设置为undefined可以获取pageNumber，pageSize，searchText，sortName，sortOrder  \r\n");
      out.write("                     //设置为limit可以获取limit, offset, search, sort, order  \r\n");
      out.write("                     queryParamsType : \"undefined\", \r\n");
      out.write("                     columns:[\r\n");
      out.write("                              {\r\n");
      out.write("                                  title:'全选',\r\n");
      out.write("                                  field:'select',\r\n");
      out.write("                                  //复选框\r\n");
      out.write("                                  checkbox:true,\r\n");
      out.write("                                  width:25,\r\n");
      out.write("                                  align:'center',\r\n");
      out.write("                                  valign:'middle'\r\n");
      out.write("                              },\r\n");
      out.write("                              {\r\n");
      out.write("                                  title:'ID',\r\n");
      out.write("                                  field:'id',\r\n");
      out.write("                              },\r\n");
      out.write("                              {\r\n");
      out.write("                                  title:'店铺',\r\n");
      out.write("                                  field:'storename',\r\n");
      out.write("                                  sortable:true\r\n");
      out.write("                              },\r\n");
      out.write("                              {\r\n");
      out.write("                                  title:'日期',\r\n");
      out.write("                                  field:'date',\r\n");
      out.write("                                  sortable:true,\r\n");
      out.write("                                  editable:true\r\n");
      out.write("                              },\r\n");
      out.write("                              {\r\n");
      out.write("                                  title:'计划数',\r\n");
      out.write("                                  field:'payment',\r\n");
      out.write("                                  editable:true\r\n");
      out.write("                              }\r\n");
      out.write("                          ],\r\n");
      out.write("                     queryParams: function queryParams(param) {   //设置查询参数  \r\n");
      out.write("                       var param = {    \r\n");
      out.write("               \t\t\t\tpage:this.pageNumber,\r\n");
      out.write("               \t\t\t\tlimit:this.pageSize,\r\n");
      out.write("                       };  \r\n");
      out.write("                        return param;                   \r\n");
      out.write("                     },  \r\n");
      out.write("                     onLoadError: function(){  //加载失败时执行  \r\n");
      out.write("                       alert(\"加载数据失败\");  \r\n");
      out.write("                     }  \r\n");
      out.write("                   });  \r\n");
      out.write("               }  \r\n");
      out.write("           function initTable2(){\r\n");
      out.write("        \t\t$('#cusTable').bootstrapTable({\r\n");
      out.write("        \t\t\turl : 'target/queryDailyTarget.do', // 请求后台的URL（*）\r\n");
      out.write("        \t\t\t//method : 'post', // 请求方式（*）\r\n");
      out.write("        \t\t\ttoolbar : '#toolbar', // 工具按钮用哪个容器\r\n");
      out.write("        \t\t\tstriped : true, // 是否显示行间隔色\r\n");
      out.write("        \t\t\tcache : false, // 是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）\r\n");
      out.write("        \t\t\tpagination : true, // 是否显示分页（*）\r\n");
      out.write("        \t\t\tsortable : false, // 是否启用排序\r\n");
      out.write("        \t\t\tsortOrder : \"asc\", // 排序方式\r\n");
      out.write("        \t\t\tsidePagination : \"server\", // 分页方式：client客户端分页，server服务端分页（*）\r\n");
      out.write("        \t\t\tpageNumber : 1, // 初始化加载第一页，默认第一页\r\n");
      out.write("        \t\t\tpageSize : 10, // 每页的记录行数（*）\r\n");
      out.write("        \t\t\tpageList : [ 10, 25, 50, 100 ], // 可供选择的每页的行数（*）\r\n");
      out.write("        \t\t\tqueryParams : {\r\n");
      out.write("        \t\t\t\tpage:this.pageNumber,limit:(this.pageNumber-1)*this.pageSize\r\n");
      out.write("        \t\t\t\t\r\n");
      out.write("        \t\t\t},// 传递参数（*）\r\n");
      out.write("        \t\t\tsearch : false, // 是否显示表格搜索，此搜索是客户端搜索，不会进服务端，所以，个人感觉意义不大\r\n");
      out.write("        \t\t\tstrictSearch : true,\r\n");
      out.write("        \t\t\tshowColumns : true, // 是否显示所有的列\r\n");
      out.write("        \t\t\tshowRefresh : true, // 是否显示刷新按钮\r\n");
      out.write("        \t\t\tminimumCountColumns : 2, // 最少允许的列数\r\n");
      out.write("        \t\t\tclickToSelect : true, // 是否启用点击选中行\r\n");
      out.write("        \t\t\theight : 500, // 行高，如果没有设置height属性，表格自动根据记录条数觉得表格高度\r\n");
      out.write("        \t\t\tuniqueId : \"ID\", // 每一行的唯一标识，一般为主键列\r\n");
      out.write("        \t\t\tshowToggle : true, // 是否显示详细视图和列表视图的切换按钮\r\n");
      out.write("        \t\t\tcardView : false, // 是否显示详细视图\r\n");
      out.write("        \t\t\tdetailView : false, // 是否显示父子表\r\n");
      out.write("        \t\t\tcolumns :[{\r\n");
      out.write("                        title:'全选',\r\n");
      out.write("                        field:'select',\r\n");
      out.write("                        //复选框\r\n");
      out.write("                        checkbox:true,\r\n");
      out.write("                        width:25,\r\n");
      out.write("                        align:'center',\r\n");
      out.write("                        valign:'middle'\r\n");
      out.write("                    },\r\n");
      out.write("                    {\r\n");
      out.write("                        title:'ID',\r\n");
      out.write("                        field:'id',\r\n");
      out.write("                    },\r\n");
      out.write("                    {\r\n");
      out.write("                        title:'店铺',\r\n");
      out.write("                        field:'storename',\r\n");
      out.write("                        sortable:true\r\n");
      out.write("                    },\r\n");
      out.write("                    {\r\n");
      out.write("                        title:'日期',\r\n");
      out.write("                        field:'date',\r\n");
      out.write("                        sortable:true\r\n");
      out.write("                    },\r\n");
      out.write("                    {\r\n");
      out.write("                        title:'计划数',\r\n");
      out.write("                        field:'payment',\r\n");
      out.write("                    },\r\n");
      out.write("                    {\r\n");
      out.write("                        title:'状态',\r\n");
      out.write("                        field:'Attribute',\r\n");
      out.write("                        align:'center',\r\n");
      out.write("                        //列数据格式化\r\n");
      out.write("                    }\r\n");
      out.write("                ],\r\n");
      out.write("        \t\t});\r\n");
      out.write("        \t}\r\n");
      out.write("           function ShowTheObject(obj){  \r\n");
      out.write("        \t   var des = \"\";  \r\n");
      out.write("        \t     for(var name in obj){  \r\n");
      out.write("        \t     des += name + \":\" + obj[name] + \";\";  \r\n");
      out.write("        \t      }  \r\n");
      out.write("        \t  return des;\r\n");
      out.write("        \t }   \r\n");
      out.write("    </script>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

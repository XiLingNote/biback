/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.37
 * Generated at: 2017-06-19 01:42:15 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class topStore_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("<title>shopSale</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/css/bootstrap/bootstrap.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"/css/bootstrap/bootstrap-datetimepicker.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/css/style.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/css/jsp.css\">\r\n");
      out.write("<script src=\"/js/jquery-1.12.3.js\"></script>\r\n");
      out.write("<script src=\"/js/highcharts.js\"></script>\r\n");
      out.write("<script src=\"/js/style.js\"></script>\r\n");
      out.write("<script src=\"/js/scientific.js\"></script>\r\n");
      out.write("<script src=\"/js/bootstrap/bootstrap.min.js\"></script>\r\n");
      out.write("<script src=\"/js/bootstrap/bootstrap-datetimepicker.zh-CN.js\"></script>\r\n");
      out.write("<script src=\"/js/bootstrap/bootstrap-datetimepicker.js\"></script>\r\n");
      out.write("<script src=\"/js/bootstrap/bootstrap-typeahead.js\"></script>\r\n");
      out.write("<script src=\"/js/Highchartstheme.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("\tfunction getData(datetype, begin, end, stores) {\r\n");
      out.write("\t\t$.post(\"/industry/topStore.do\", {\r\n");
      out.write("\t\t\t\"datetype\" : datetype,\r\n");
      out.write("\t\t\t\"begin\" : begin,\r\n");
      out.write("\t\t\t\"end\" : end,\r\n");
      out.write("\t\t\t\"stores\" : stores\r\n");
      out.write("\t\t}, function(data) {\r\n");
      out.write("\t\t//\ttopList\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\tif (data) {\r\n");
      out.write("\t\t\t\ttry {\r\n");
      out.write("\t\t\t\t\tvar obj = eval('(' + data + ')');\r\n");
      out.write("\t\t\t\t} catch (e) {\r\n");
      out.write("\t\t\t\t\tvar response = decodeURI(data);\r\n");
      out.write("\t\t\t\t\talert(response);\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tvar obj = eval('(' + data + ')');\r\n");
      out.write("\t\t\t\tvar treeSet = obj.treeSet;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tvar categories = [];\r\n");
      out.write("\t\t\t\tvar rates = [];\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tvar gmvs = [];\r\n");
      out.write("\t\t\t\tvar targets = [];\r\n");
      out.write("\t\t\t\tvar alipays = [];\r\n");
      out.write("\t\t\t\tvar totalGmv = 0.00;\r\n");
      out.write("\t\t\t\tvar totalTarget = 0.00;\r\n");
      out.write("\t\t\t\tvar totalAlipay = 0.00;\r\n");
      out.write("\t\t\t\tvar totalCplR;\r\n");
      out.write("\t\t\t\t$.each(treeSet, function(i, value) {\r\n");
      out.write("\t\t\t\t\ttotalGmv = totalGmv + value.gmv;\r\n");
      out.write("\t\t\t\t\ttotalTarget = totalTarget + value.target;\r\n");
      out.write("\t\t\t\t\ttotalAlipay = totalAlipay + value.alipay;\r\n");
      out.write("\t\t\t\t\tvar gmv = value.gmv;\r\n");
      out.write("\t\t\t\t\tgmvs.push(gmv);\r\n");
      out.write("\t\t\t\t\tvar target = value.target;\r\n");
      out.write("\t\t\t\t\ttargets.push(target);\r\n");
      out.write("\t\t\t\t\t//if (target) {\r\n");
      out.write("\t\t\t\t\t//\tvar ra = gmv / target;\r\n");
      out.write("\t\t\t\t\t\tvar rate = eval('(' + (value.completeness*100).toFixed(2) + ')');\r\n");
      out.write("\t\t\t\t\t\trates.push(rate);\r\n");
      out.write("\t\t\t\t\t//} else {\r\n");
      out.write("\t\t\t\t\t//}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\talipays.push(value.alipay);\r\n");
      out.write("\t\t\t\t\tcategories.push(value.datetime);\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif (categories.length > 60) {\r\n");
      out.write("\t\t\t\t\tjson.xAxis[0].tickInterval = 6;\r\n");
      out.write("\t\t\t\t} else if (categories.length > 30) {\r\n");
      out.write("\t\t\t\t\tjson.xAxis[0].tickInterval = 3;\r\n");
      out.write("\t\t\t\t} else if (categories.length > 15) {\r\n");
      out.write("\t\t\t\t\tjson.xAxis[0].tickInterval = 2;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tjson.xAxis[0].categories = categories;\r\n");
      out.write("\t\t\t\tjson.series[0].data = rates;\r\n");
      out.write("\t\t\t\tjson.series[1].data = gmvs;\r\n");
      out.write("\t\t\t\tjson.series[2].data = targets;\r\n");
      out.write("\t\t\t\tjson.series[3].data = alipays;\r\n");
      out.write("\t\t\t\t$(\".contentl\").highcharts(json);\r\n");
      out.write("\t\t\t\ttotalCplR = (totalGmv/totalTarget*100).toFixed(2);\r\n");
      out.write("\t\t\t\t//gmv alipay target cpl\r\n");
      out.write("\t\t\t\tvar _totalGmv = formatNum(totalGmv);\r\n");
      out.write("\t\t\t\tvar _totalAlipay = formatNum(totalAlipay);\r\n");
      out.write("\t\t\t\tvar _totalTarget = formatNum(totalTarget);\r\n");
      out.write("\t\t\t\t$(\"#gmv\").html(_totalGmv);\r\n");
      out.write("\t\t\t\t$(\"#alipay\").html(_totalAlipay);\r\n");
      out.write("\t\t\t\t$(\"#target\").html(_totalTarget);\r\n");
      out.write("\t\t\t\t$(\"#cpl\").html(totalCplR+\"%\");\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\talert(\"查询参数无效\"); \r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\tfunction value() {\r\n");
      out.write("\t\t$('#s1>input[name = begin ]').val(null);\r\n");
      out.write("\t\t$('#s1>input[name = end ]').val(null);\r\n");
      out.write("\t\t$('#s2>input[name = begin ]').val(null);\r\n");
      out.write("\t\t$('#s2>input[name = end ]').val(null);\r\n");
      out.write("\t\t$('#s3>input[name = begin ]').val(null);\r\n");
      out.write("\t\t$('#s3>input[name = end ]').val(null);\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tfunction autoCompletion(store) {\r\n");
      out.write("\t\t$.get(\"/store/name.do\", function(data) {\r\n");
      out.write("\t\t\tvar storename = eval('(' + data + ')');\r\n");
      out.write("\t\t\tvar storenames = [];\r\n");
      out.write("\t\t\t$.each(storename, function(i, value) {\r\n");
      out.write("\t\t\t\tvar name = decodeURI(value);\r\n");
      out.write("\t\t\t\tstorenames.push(name);\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\tnames = storenames;\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$.fn.typeahead.Constructor.prototype.blur = function() {\r\n");
      out.write("\t\t\tvar that = this;\r\n");
      out.write("\t\t\tsetTimeout(function() {\r\n");
      out.write("\t\t\t\tthat.hide()\r\n");
      out.write("\t\t\t}, 250);\r\n");
      out.write("\r\n");
      out.write("\t\t};\r\n");
      out.write("\r\n");
      out.write("\t\t$('.selectstore').typeahead({\r\n");
      out.write("\t\t\tsource : function(query, process) {\r\n");
      out.write("\t\t\t\treturn names;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tvar b = true;\r\n");
      out.write("\tvar time = 10000;\r\n");
      out.write("\t\r\n");
      out.write("\tvar json = {\r\n");
      out.write("\t\tchart : {\r\n");
      out.write("\t\t\tzoomType : 'xy'\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\ttitle : {\r\n");
      out.write("\t\t\ttext : 'topstore'\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\tsubtitle : {\r\n");
      out.write("\t\t\ttext : 'gmv'\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\txAxis : [ {\r\n");
      out.write("\t\t\tcategories : [ '201701', '201702', '201703', '201704', '201705'],\r\n");
      out.write("\t\t\tcrosshair : true,\r\n");
      out.write("\t\t\ttickInterval : 1\r\n");
      out.write("\t\t} ],\r\n");
      out.write("\t\tyAxis : [ { // Primary yAxis\r\n");
      out.write("\t\t\tlabels : {\r\n");
      out.write("\t\t\t\tformat : '{value}',\r\n");
      out.write("\t\t\t\tstyle : {\r\n");
      out.write("\t\t\t\t\tcolor : Highcharts.getOptions().colors[1]\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\ttitle : {\r\n");
      out.write("\t\t\t\ttext : '金额',\r\n");
      out.write("\t\t\t\tstyle : {\r\n");
      out.write("\t\t\t\t\tcolor : Highcharts.getOptions().colors[1]\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}],\r\n");
      out.write("\t\ttooltip : {\r\n");
      out.write("\t\t\tshared : true\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\tlegend : {\r\n");
      out.write("\t\t\tlayout : 'vertical',\r\n");
      out.write("\t\t\talign : 'left',\r\n");
      out.write("\t\t\tx : 0,\r\n");
      out.write("\t\t\tverticalAlign : 'top',\r\n");
      out.write("\t\t\ty : 0,\r\n");
      out.write("\t\t\tfloating : true,\r\n");
      out.write("\t\t\tbackgroundColor : (Highcharts.theme && Highcharts.theme.legendBackgroundColor)\r\n");
      out.write("\t\t\t\t\t|| '#FFFFFF'\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\tseries : [ {\r\n");
      out.write("\t\t\tname : 'GMV',\r\n");
      out.write("\t\t\ttype : 'areaspline',\r\n");
      out.write("\t\t\tdata : [ 18,16,14,32,19 ],\r\n");
      out.write("\t\t\ttooltip : {\r\n");
      out.write("\t\t\t\tvalueSuffix : ''\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t},{\r\n");
      out.write("\t\t\tname : 'target',\r\n");
      out.write("\t\t\ttype : 'areaspline',\r\n");
      out.write("\t\t\tcolor : '#66cdaa',\r\n");
      out.write("\t\t\tdata : [23,15,43,12,15 ],\r\n");
      out.write("\t\t\ttooltip : {\r\n");
      out.write("\t\t\t\tvalueSuffix : ''\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t} ]\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tvar options = {\r\n");
      out.write("\t\tweekStart : 1,\r\n");
      out.write("\t\ttodayBtn : 1,\r\n");
      out.write("\t\tautoclose : 1,\r\n");
      out.write("\t\ttodayHighlight : 1,\r\n");
      out.write("\t\tstartView : 2,\r\n");
      out.write("\t\tminView : 2,\r\n");
      out.write("\t\tlanguage : 'zh-CN',\r\n");
      out.write("\t\tformat : 'dd/MM/yyyy',\r\n");
      out.write("\t\tforceParse : 0\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tvar names = [\"aa\",\"bb\"];\r\n");
      out.write("\t\r\n");
      out.write("\t$(function() {\r\n");
      out.write("\t\t$(\".contentl\").highcharts(json);\r\n");
      out.write("\t\t$(\"input[name='datetype']:last\").attr(\"checked\", true);\r\n");
      out.write("\t\t//\tjson.series[1].tooltip.valueSuffix = 'k';\r\n");
      out.write("\t\t//\t\tjson.series[2].tooltip.valueSuffix = 'k';\r\n");
      out.write("\t\tvar begin;\r\n");
      out.write("\t\tvar end;\r\n");
      out.write("\t\t/*年日期选项   */\r\n");
      out.write("\t\toptions.minView = 4;\r\n");
      out.write("\t\toptions.startView = 4;\r\n");
      out.write("\t\toptions.format = \"yyyy\";\r\n");
      out.write("\t\t$('#s1>input[name = begin ]').datetimepicker(options);\r\n");
      out.write("\t\t$('#s1>input[name = end ]').datetimepicker(options);\r\n");
      out.write("\t\t/*月日期选项   */\r\n");
      out.write("\t\toptions.minView = 3;\r\n");
      out.write("\t\toptions.startView = 3;\r\n");
      out.write("\t\toptions.format = \"yyyy/MM\";\r\n");
      out.write("\t\t$('#s2>input[name = begin ]').datetimepicker(options);\r\n");
      out.write("\t\t$('#s2>input[name = end ]').datetimepicker(options);\r\n");
      out.write("\t\t/*日日期选项   */\r\n");
      out.write("\t\toptions.minView = 2;\r\n");
      out.write("\t\toptions.startView = 2;\r\n");
      out.write("\t\toptions.format = \"yyyy/MM/dd\";\r\n");
      out.write("\t\t$('#s3>input[name = begin ]').datetimepicker(options);\r\n");
      out.write("\t\t$('#s3>input[name = end ]').datetimepicker(options);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$('#s1>input[name = begin ]').datetimepicker().on('changeDate',\r\n");
      out.write("\t\t\t\tfunction(ev) {\r\n");
      out.write("\t\t\t\t\tbegin = ev.date;\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t$('#s1>input[name = end ]').datetimepicker().on('changeDate',\r\n");
      out.write("\t\t\t\tfunction(ev) {\r\n");
      out.write("\t\t\t\t\tend = ev.date;\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t$('#s2>input[name = begin ]').datetimepicker().on('changeDate',\r\n");
      out.write("\t\t\t\tfunction(ev) {\r\n");
      out.write("\t\t\t\t\tbegin = ev.date;\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t$('#s2>input[name = end ]').datetimepicker().on('changeDate',\r\n");
      out.write("\t\t\t\tfunction(ev) {\r\n");
      out.write("\t\t\t\t\tend = ev.date;\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t$('#s3>input[name = begin ]').datetimepicker().on('changeDate',\r\n");
      out.write("\t\t\t\tfunction(ev) {\r\n");
      out.write("\t\t\t\t\tbegin = ev.date;\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t$('#s3>input[name = end ]').datetimepicker().on('changeDate',\r\n");
      out.write("\t\t\t\tfunction(ev) {\r\n");
      out.write("\t\t\t\t\tend = ev.date;\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t$(\"input[name='datetype']\").change(function() {\r\n");
      out.write("\t\t\tbegin = null;\r\n");
      out.write("\t\t\tend = null;\r\n");
      out.write("\t\t\t// 清空日期选择框的值\r\n");
      out.write("\t\t\tvalue();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar datetype = $(\"input[name='datetype']:checked\").val();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif (datetype == \"YEAR\") {\r\n");
      out.write("\t\t\t\t$(\"#s1\").removeAttr(\"hidden\");\r\n");
      out.write("\t\t\t\t$(\"#s2\").attr(\"hidden\", true);\r\n");
      out.write("\t\t\t\t$(\"#s3\").attr(\"hidden\", true);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tif (datetype == \"MONTH\") {\r\n");
      out.write("\t\t\t\t$(\"#s2\").removeAttr(\"hidden\");\r\n");
      out.write("\t\t\t\t$(\"#s1\").attr(\"hidden\", true);\r\n");
      out.write("\t\t\t\t$(\"#s3\").attr(\"hidden\", true);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tif (datetype == \"DAY\") {\r\n");
      out.write("\t\t\t\t$(\"#s3\").removeAttr(\"hidden\");\r\n");
      out.write("\t\t\t\t$(\"#s2\").attr(\"hidden\", true);\r\n");
      out.write("\t\t\t\t$(\"#s1\").attr(\"hidden\", true);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t//\tgetData(datetype, begin, end, store);\r\n");
      out.write("\t\t// 加载店铺名称\r\n");
      out.write("\t\tautoCompletion();\r\n");
      out.write("\r\n");
      out.write("\t\t$(\"#go\").click(function() {\r\n");
      out.write("\t\t\tvar type = $(\"input[name='datetype']:checked\").val();\r\n");
      out.write("\t\t\tvar store = $('.selectstore').val();//选中的值\r\n");
      out.write("\r\n");
      out.write("\t\t\tif (!store) {\r\n");
      out.write("\t\t\t\talert(\"请选择查询的店铺名称!\");\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\tif (!type) {\r\n");
      out.write("\t\t\t\talert(\"请选择日期类型!\");\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tgetData(type, begin, end, store);\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t});\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<style>\r\n");
      out.write("* {\r\n");
      out.write("\tmargin: 0;\r\n");
      out.write("\tpadding: 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("a {\r\n");
      out.write("\tcolor: #ffffff;\r\n");
      out.write("\ttext-decoration: none;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/page/top.do", out, false);
      out.write('\r');
      out.write('\n');
      out.write('	');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/page/left.do", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<form action=\"\" class=\"form-horizontal\" role=\"form\">\r\n");
      out.write("\t\t<div class=\"an\" style=\"position: absolute; left: 15%\">\r\n");
      out.write("\t\t\t<input type=\"radio\" name=\"datetype\" value=\"YEAR\" />y <input\r\n");
      out.write("\t\t\t\ttype=\"radio\" name=\"datetype\" value=\"MONTH\" /> m <input type=\"radio\"\r\n");
      out.write("\t\t\t\tname=\"datetype\" value=\"DAY\" /> d\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t<div id=\"ff\"\r\n");
      out.write("\t\t\tstyle=\"position: absolute; top: 10%; left: 28%; width: 30%\">\r\n");
      out.write("\t\t\t<div id=\"s1\" hidden='true'>\r\n");
      out.write("\t\t\t\t<input name=\"begin\" style=\"height: 40px; width: 40%\" readonly=\"true\" />\r\n");
      out.write("\t\t\t\t<input name=\"end\" style=\"height: 40px; width: 40%\" readonly=\"true\" />\r\n");
      out.write("\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<div id=\"s2\" hidden='true'>\r\n");
      out.write("\t\t\t\t<input name=\"begin\" style=\"height: 40px; width: 40%\" readonly=\"true\">\r\n");
      out.write("\t\t\t\t<input name=\"end\" style=\"height: 40px; width: 40%\" readonly=\"true\" />\r\n");
      out.write("\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<div id=\"s3\">\r\n");
      out.write("\t\t\t\t<input name=\"begin\" style=\"height: 40px; width: 40%\" readonly=\"true\" />\r\n");
      out.write("\t\t\t\t<input name=\"end\" style=\"height: 40px; width: 40%\" readonly=\"true\" />\r\n");
      out.write("\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t<div class=\"storename\">\r\n");
      out.write("\t\t\t<span> Store name ：</span>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<input class=\"selectstore\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t</form>\r\n");
      out.write("\t<div class=\"view\">\r\n");
      out.write("\t\t<div class=\"topStoreDiv\" salesTrendDiv>\r\n");
      out.write("\t\t\t<span class=\"span\">GMV:</span> <br> <span id=\"gmv\" class=\"span\"></span>\r\n");
      out.write("\t\t</div>\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t<div class=\"topStoreDiv\" salesTrendDiv>\r\n");
      out.write("\t\t\t<span class=\"span\">Compare:</span> <br> <span id=\"gmv2\" class=\"span\"></span>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t<input type=\"button\" id=\"go\" value=\"查询\" />\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"contentl\"\r\n");
      out.write("\t\tstyle=\"width: 80%; height: 550px; position: relative; top: 30%; left: 15%\">\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
